{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoApp.js","App.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","key","TodoAdd","handleAddTodo","initialState","useState","values","setvalues","reset","handleIputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","onChange","placeholder","autoComplete","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","todoId","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc762218.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    case \"toggle-old\":\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            done: !todo.done,\r\n          };\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n    return (\r\n        <>\r\n\r\n              <li className=\"list-group-item pointer\">\r\n                <p className={`${todo.done && 'complete'}`} onClick={() => handleToggle(todo.id)}>\r\n                  {index + 1}. {todo.desc}\r\n                </p>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)} >borrar</button>\r\n              </li>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <>\r\n          <ul className=\"list-group list-group list-group-flush\">\r\n            {todos.map((todo, i) => (\r\n                <TodoListItem  key={todo.id} todo={todo} index={i} todos={todos} handleDelete={handleDelete} handleToggle={handleToggle}/>\r\n            ))}\r\n          </ul>   \r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ description }, handleIputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length <= 0) {\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n        id: new Date().getTime(),\r\n        desc: description,\r\n        done: false,\r\n      };\r\n  \r\n      handleAddTodo(newTodo);\r\n      reset()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4>agregar todo</h4>\r\n      <hr />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          value={description}\r\n          onChange={handleIputChange}\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Aprender... \"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary mt-1 btn-block\"\r\n        >\r\n          agregar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   \r\n    const [values, setvalues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setvalues(initialState);\r\n    }\r\n\r\n    const handleIputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleIputChange, reset];\r\n\r\n}\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { todoReducer } from \"./todoReducer\";\r\nimport \"./styles.css\";\r\nimport { TodoList } from \"./TodoList\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\n\r\nexport const TodoApp = () => {\r\n\r\n  const init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || []\r\n\r\n    // return [\r\n    //     {\r\n    //       id: new Date().getTime(),\r\n    //       desc: \"aprender react\",\r\n    //       done: false,\r\n    //     },\r\n    //   ];\r\n\r\n  }\r\n\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const handleDelete = (todoId) => {\r\n    console.log(todoId);\r\n\r\n    const action = {\r\n        type: 'delete',\r\n        payload: todoId\r\n    }\r\n\r\n    dispatch(action)\r\n  }\r\n\r\n  const handleToggle = (todoId) => {\r\n\r\n    dispatch({\r\n        type: 'toggle',\r\n        payload: todoId\r\n    })\r\n\r\n  }\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n  \r\n      dispatch({\r\n        type: \"add\",\r\n        payload: newTodo,\r\n      });\r\n  }\r\n\r\n//   console.log(description);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>TodoApp ({todos.length}) </h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n            <TodoList todos={todos} handleDelete={handleDelete} handleToggle={handleToggle}/>\r\n        </div>\r\n        <div className=\"col-5\">\r\n            <TodoAdd handleAddTodo={handleAddTodo}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\nimport { TodoApp } from './components/TodoApp'\n\nconst App = () => {\n  return (\n    <>\n      <TodoApp/>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}